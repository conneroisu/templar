name: Test Suite

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.24' ]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Setup Nix cache
      uses: DeterminateSystems/magic-nix-cache-action@main

    - name: Setup development environment
      run: nix develop --command bash -c "go mod download && templ generate"
    
    - name: Run tests
      run: nix develop --command go test -race -coverprofile=coverage.out ./...
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Setup Nix cache
      uses: DeterminateSystems/magic-nix-cache-action@main

    - name: Run linting
      run: nix develop --command golangci-lint run --timeout=5m

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Setup Nix cache
      uses: DeterminateSystems/magic-nix-cache-action@main

    - name: Setup and build
      run: |
        nix develop --command bash -c "go mod download && templ generate"
        nix develop --command go build -v .
    
    - name: Test build with race detector
      run: nix develop --command go build -race -v .